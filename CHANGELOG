# Changelog snaggle

## [v0.3.1] - AUTOGENERATED

### Breaking changes

### Features

### Fixes

## [v0.3.0] - improved error handing

### Fixes

- parsable error returns from snaggle library
- well formatted error output from CLI

## [v0.2.0] - snaggle directories & snaggle in-place

### Features

- passing a directory to snaggle will snag all ELF binaries under that location
- adding --recursive (cli) / Recursive() (library) will also recurse subdirectories
- adding --in-place (cli) / InPlace() (library) will only snag dependencies

## [v0.1.4] - fix missing interpreter

### Fixes

- [#49](https://github.com/MusicalNinjaDad/snaggle/issues/49) "docker runtime built with snaggle fails: `exec /bin/tini: no such file or directory`"

## [v0.1.3] - fix error snaggling a dynamic library

### Fixes

- [#47](https://github.com/MusicalNinjaDad/snaggle/issues/47) "Unable to snag dynamic .so files"

## [v0.1.2] - fix error when target file exists

### Fixes

- [#43](https://github.com/MusicalNinjaDad/snaggle/issues/43) "Fails in multistage build when re-linking libc.so.6 (file exists)"

## [v0.1.1] - fix release machinery

### Fixes

- removed attestations from automated release process

## [v0.1.0] - initial CLI (Go)

### Features

- CLI `snaggle FILE DESTINATION` to snag a copy of FILE and all its dependencies to DESTINATION/bin & DESTINATION/lib64
  - Hardlinks will be created if possible.
  - A copy will be performed if hardlinking fails for one of the following reasons:
    - path & root are on different filesystems
    - the user does not have permission to hardlink (e.g.
      https://docs.kernel.org/admin-guide/sysctl/fs.html#protected-hardlinks)
  - Copies will retain the original filemode
  - Copies will attempt to retain the original ownership, although this will likely fail if running as non-root
- Library `snaggle` providing same functionality
- Library `elf` with parsing functionality

## [v0.0.1] - python script

### Features

- Original script using lddwrap
